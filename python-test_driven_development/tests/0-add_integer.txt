===============================
 How to Use 0-add_integer.py
===============================

This library is very simple, since it only has one function called
``add_integer()``.

Numbers
=======

``add_integer()`` returns the sum of two arguments.

::


    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 2)
    3

    >>> add_integer(100, -2)
    98

The second argument is optional and by default, it is 98.

::

    >>> add_integer(2)
    100



The function also works with floating-point values.

::

    >>> add_integer(100.3, -2)
    98


Non-Numbers
===========

::

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer


The function will fail if infinity is provided.


::

    >>> add_integer(float('inf'), float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.

::

    >>> add_integer(float('nan'), float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
