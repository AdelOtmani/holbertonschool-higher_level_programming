===============================
 How to Use 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Numbers
=======

``matrix_divided()`` returns Returns a new matrix divided by div.

::


    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [
    ...         [1, 2, 3],
    ...         [4, 5, 6]]

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

The second argument must be int and != 0.

    >>> matrix_divided(matrix, "a")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

the fist arg is not a list of lists of int.

    >>> matrix_divided([["a","ab"],["c","d"]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3],[4, 5, 6, 7]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

missing one argument.

    >>> matrix_divided(matrix)
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided(0)
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

if div == float('inf')

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
